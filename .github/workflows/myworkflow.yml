name: My First GitHub Action
on: [push]
jobs:
  My-Action:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Triggered by a ${{ github.event_name }} event."
      - run: echo "Running on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "Repository is ${{ github.repository }}, branch is ${{ github.ref }}."

      - name: Checkout the repository with the code to be analyzed
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout the action from a private repository
        uses: actions/checkout@v2
        if: ${{ always() }}
        with:
          repository: vijejain/cicd-actions
          ref: refs/heads/main
          token: ${{ secrets.TOKEN }}   # Required for Private Beta
          path: ./.github/vijejain/cicd-actions

      - name: Show what's inside the cicd-actions directory (debugging)
        run: |
          ls -l ./.github/vijejain/cicd-actions

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ always() }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Build the repository to be analyzed (using Maven)
        run: |
          cd ${{ github.workspace }}
          mvn package

      - run: echo "Job status after building is ${{ job.status }}."

      - name: Analyze with CodeGuru Reviewer
        uses: ./.github/vijejain/cicd-actions
        if: ${{ always() }} 
        with:
          source_path: .     # Repository root
          build_path: target # build artifact(s) directory
          s3_bucket: codeguru-reviewer-mybucket101  # S3 Bucket with "codeguru-reviewer-*" prefix

      - run: echo "Job status after analyzing is ${{ job.status }}."

      - name: Upload analysis results
        uses: github/codeql-action/upload-sarif@v1
        if: ${{ always() }}
        with:
          sarif_file: codeguru-results.sarif.json

      - run: echo "Job status after uploading results is ${{ job.status }}."
